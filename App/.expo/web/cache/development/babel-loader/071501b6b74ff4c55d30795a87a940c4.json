{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/user/Desktop/ChouChou/App/node_modules/react-native-whc-calendar/calendar-grid-item.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar screenWidth = Dimensions.get('window').width;\n\nvar CalendarGridItem = function (_Component) {\n  _inherits(CalendarGridItem, _Component);\n\n  var _super = _createSuper(CalendarGridItem);\n\n  function CalendarGridItem(props) {\n    _classCallCheck(this, CalendarGridItem);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(CalendarGridItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$item = _this$props.item,\n          item = _this$props$item === void 0 ? null : _this$props$item,\n          _this$props$onPress = _this$props.onPress,\n          _onPress = _this$props$onPress === void 0 ? null : _this$props$onPress,\n          _this$props$startSele = _this$props.startSelectedHint,\n          startSelectedHint = _this$props$startSele === void 0 ? null : _this$props$startSele,\n          _this$props$endSelect = _this$props.endSelectedHint,\n          endSelectedHint = _this$props$endSelect === void 0 ? null : _this$props$endSelect,\n          _this$props$selectedC = _this$props.selectedColor,\n          selectedColor = _this$props$selectedC === void 0 ? '#1895D4' : _this$props$selectedC,\n          _this$props$selectedM = _this$props.selectedMidColor,\n          selectedMidColor = _this$props$selectedM === void 0 ? 'rgba(24,149,212,0.2)' : _this$props$selectedM,\n          _this$props$selectedT = _this$props.selectedTextColor,\n          selectedTextColor = _this$props$selectedT === void 0 ? '#fff' : _this$props$selectedT,\n          _this$props$highlight = _this$props.highlightColor,\n          highlightColor = _this$props$highlight === void 0 ? 'red' : _this$props$highlight;\n\n      if (!item) {\n        return React.createElement(View, {\n          style: styles.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }\n        });\n      }\n\n      var year = item.year,\n          month = item.month,\n          week = item.week,\n          weekText = item.weekText,\n          holiday = item.holiday,\n          isToday = item.isToday,\n          isOver = item.isOver,\n          isLessToday = item.isLessToday,\n          startSelected = item.startSelected,\n          endSelected = item.endSelected,\n          isSelected = item.isSelected,\n          day = item.day;\n      var holidayValue = holiday;\n\n      if (isToday) {\n        holidayValue = '今天';\n      }\n\n      var didSelected = startSelected || endSelected;\n      var dayTextColor = didSelected ? selectedTextColor : isLessToday || isOver ? '#aaa' : '#333';\n      var holidayTextColor = didSelected ? selectedTextColor : isLessToday || isOver ? '#aaa' : highlightColor;\n      var backColor = '#fff';\n\n      if (!isLessToday && !isOver && (week === 0 || week === 6)) {\n        dayTextColor = didSelected ? selectedTextColor : highlightColor;\n      }\n\n      if (startSelected || endSelected) {\n        backColor = selectedColor;\n\n        if (startSelectedHint && startSelectedHint !== '' && startSelected) {\n          holidayValue = startSelectedHint;\n        } else if (endSelectedHint && endSelectedHint !== '' && endSelected) {\n          holidayValue = endSelectedHint;\n        }\n      } else if (isSelected) {\n        backColor = selectedMidColor;\n      }\n\n      var contents = React.createElement(View, {\n        style: styles.buttonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonHolidayText, {\n          color: holidayTextColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, holidayValue), React.createElement(Text, {\n        style: [styles.buttonText, {\n          color: dayTextColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, day));\n\n      if (isLessToday || isOver) {\n        backColor = 'rgb(252,252,252)';\n        return React.createElement(View, {\n          style: [styles.button, {\n            backgroundColor: backColor\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, contents);\n      }\n\n      return React.createElement(TouchableHighlight, {\n        style: [styles.button, {\n          backgroundColor: backColor\n        }],\n        enabled: isLessToday,\n        underlayColor: '#ccc',\n        onPress: function onPress() {\n          _onPress && _onPress(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, contents);\n    }\n  }]);\n\n  return CalendarGridItem;\n}(Component);\n\nexport { CalendarGridItem as default };\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    width: screenWidth / 7.0 - 0.1,\n    height: 60,\n    marginBottom: 0.5\n  },\n  buttonView: {\n    width: screenWidth / 7.0 - 0.1,\n    height: 60\n  },\n  buttonHolidayText: {\n    position: 'absolute',\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 10,\n    top: 10,\n    left: 0,\n    right: 0\n  },\n  buttonText: {\n    position: 'absolute',\n    color: '#333',\n    textAlign: 'center',\n    left: 0,\n    right: 0,\n    bottom: 20,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/user/Desktop/ChouChou/App/node_modules/react-native-whc-calendar/calendar-grid-item.js"],"names":["React","Component","screenWidth","Dimensions","get","width","CalendarGridItem","props","item","onPress","startSelectedHint","endSelectedHint","selectedColor","selectedMidColor","selectedTextColor","highlightColor","styles","button","year","month","week","weekText","holiday","isToday","isOver","isLessToday","startSelected","endSelected","isSelected","day","holidayValue","didSelected","dayTextColor","holidayTextColor","backColor","contents","buttonView","buttonHolidayText","color","buttonText","backgroundColor","StyleSheet","create","alignItems","height","marginBottom","position","textAlign","fontSize","top","left","right","bottom","fontWeight"],"mappings":"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","sourcesContent":["//  Created by WHC on 18/4/10.\n//  Copyright © 2017年 WHC. All rights reserved.\n//\n//  Github <https://github.com/netyouli/react-native-whc-calendar>\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport {\n    View,\n    StyleSheet,\n    TouchableHighlight,\n    Text,\n    Dimensions,\n} from 'react-native';\n\nconst screenWidth = Dimensions.get('window').width;\n\nexport default class CalendarGridItem extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {\n            item = null,\n            onPress = null,\n            startSelectedHint = null,\n            endSelectedHint = null,\n            selectedColor = '#1895D4',\n            selectedMidColor = 'rgba(24,149,212,0.2)',\n            selectedTextColor = '#fff',\n            highlightColor = 'red',\n        } = this.props;\n\n        if (!item) {\n            return <View style={styles.button}/>\n        }\n\n        const {\n            year,\n            month,\n            week,\n            weekText,\n            holiday,\n            isToday,\n            isOver,\n            isLessToday,\n            startSelected,\n            endSelected,\n            isSelected,\n            day,\n        } = item;\n\n        let holidayValue = holiday;\n        if (isToday) {\n            holidayValue = '今天';\n        }\n        const didSelected = startSelected || endSelected;\n        let dayTextColor = didSelected ? selectedTextColor : (isLessToday || isOver ? '#aaa' : '#333');\n        let holidayTextColor = didSelected ? selectedTextColor : (isLessToday || isOver ? '#aaa' : highlightColor);\n        let backColor = '#fff';\n        if (!isLessToday && !isOver && (week === 0 || week === 6)) {\n            dayTextColor = didSelected ? selectedTextColor : highlightColor;\n        }\n        if (startSelected || endSelected) {\n            backColor = selectedColor;\n            if (startSelectedHint && startSelectedHint !== '' && startSelected) {\n                holidayValue = startSelectedHint;\n            }else if (endSelectedHint && endSelectedHint !== '' && endSelected) {\n                holidayValue = endSelectedHint;\n            }\n        }else if (isSelected) {\n            backColor = selectedMidColor;\n        }\n        const contents = (\n            <View style={styles.buttonView}>\n                <Text style={[styles.buttonHolidayText, {color: holidayTextColor}]}>{holidayValue}</Text>\n                <Text style={[styles.buttonText, {color: dayTextColor}]}>{day}</Text>\n            </View>\n        );\n        if (isLessToday || isOver) {\n            backColor = 'rgb(252,252,252)';\n            return (\n                <View style={[styles.button, {backgroundColor: backColor}]}>\n                    {contents}\n                </View>\n            );\n        }\n        return (\n            <TouchableHighlight\n                style={[styles.button, {backgroundColor: backColor}]}\n                enabled={isLessToday}\n                underlayColor={'#ccc'}\n                onPress={() => {\n                    onPress && onPress(item);\n                }}>\n                {contents}\n            </TouchableHighlight>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: 'center',\n        backgroundColor: '#fff',\n        width: screenWidth / 7.0 - 0.1,\n        height: 60,\n        marginBottom: 0.5,\n    },\n    buttonView: {\n        width: screenWidth / 7.0 - 0.1,\n        height: 60,\n    },\n    buttonHolidayText: {\n        position: 'absolute',\n        color: 'red',\n        textAlign: 'center',\n        fontSize: 10,\n        top: 10,\n        left: 0,\n        right: 0,\n    },\n    buttonText: {\n        position: 'absolute',\n        color: '#333',\n        textAlign: 'center',\n        left: 0,\n        right: 0,\n        bottom: 20,\n        fontWeight: 'bold',\n    },\n});"]},"metadata":{},"sourceType":"module"}