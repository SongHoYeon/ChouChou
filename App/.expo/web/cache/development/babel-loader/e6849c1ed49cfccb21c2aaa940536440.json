{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/user/Desktop/ChouChou/App/pages/CalendarScreen.js\";\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DateTime from 'react-native-customize-selected-date';\nimport _ from 'lodash';\n\nvar CalendarScreen = function CalendarScreen() {\n  var onChangeDate = function onChangeDate(date) {\n    alert(date);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(DateTime, {\n    date: _this.state.time,\n    changeDate: function changeDate(date) {\n      return onChangeDate(date);\n    },\n    format: \"YYYY-MM-DD\",\n    renderChildDay: function renderChildDay(day) {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CalendarScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  icLockRed: {\n    width: 13 / 2,\n    height: 9,\n    position: 'absolute',\n    top: 2,\n    left: 1\n  }\n});","map":{"version":3,"sources":["/Users/user/Desktop/ChouChou/App/pages/CalendarScreen.js"],"names":["React","Component","DateTime","_","CalendarScreen","onChangeDate","date","alert","styles","container","state","time","day","StyleSheet","create","flex","icLockRed","width","height","position","top","left"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3BC,IAAAA,KAAK,CAACD,IAAD,CAAL;AACH,GAFD;;AAYA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAE,KAAI,CAACC,KAAL,CAAWC,IADrB;AAEI,IAAA,UAAU,EAAE,oBAACL,IAAD;AAAA,aAAUD,YAAY,CAACC,IAAD,CAAtB;AAAA,KAFhB;AAGI,IAAA,MAAM,EAAC,YAHX;AAKE,IAAA,cAAc,EAAE,wBAACM,GAAD,EAAS,CAAE,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH,CA1BD;;AA4BA,eAAeR,cAAf;AACA,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE,KAAK,CADL;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,QAAQ,EAAE,UAHH;AAIPC,IAAAA,GAAG,EAAE,CAJE;AAKPC,IAAAA,IAAI,EAAE;AALC;AAJkB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, Image } from 'react-native';\nimport DateTime from 'react-native-customize-selected-date'\nimport _ from 'lodash'\n\nconst CalendarScreen = () => {\n\n    const onChangeDate = (date) => {\n        alert(date)\n    }\n\n    //   renderChildDay(day) {\n    //     if (_.includes(['2018-11-15', '2018-12-10', '2018-12-20'], day)) {\n    //       return <Image source={require('./src/Images/ic_lock_green.png')} style={styles.icLockRed} />\n    //     }\n    //     if (_.includes(['2018-11-16', '2018-12-12', '2018-12-21', '2018-12-18'], day)) {\n    //       return <Image source={require('./src/Images/ic_lock_red.png')} style={styles.icLockRed} />\n    //     }\n    //   }\n    return (\n        <View style={styles.container}>\n            <DateTime\n                date={this.state.time}\n                changeDate={(date) => onChangeDate(date)}\n                format='YYYY-MM-DD'\n            //   renderChildDay={(day) => this.renderChildDay(day)}\n              renderChildDay={(day) => {}}\n            />\n        </View>\n    );\n\n}\n\nexport default CalendarScreen\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    icLockRed: {\n        width: 13 / 2,\n        height: 9,\n        position: 'absolute',\n        top: 2,\n        left: 1\n    }\n});\n"]},"metadata":{},"sourceType":"module"}