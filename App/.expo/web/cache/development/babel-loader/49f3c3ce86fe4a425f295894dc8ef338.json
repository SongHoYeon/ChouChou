{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/ChouChou/App/components/etc/RadioButton/RadioButtonContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RadioButton from \"./RadioButton\";\nexport default function RadioButtonContainer(_ref) {\n  var _this = this;\n\n  var values = _ref.values,\n      onPress = _ref.onPress,\n      init = _ref.init;\n\n  var _useState = useState(init),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSelectedItem = _useState2[0],\n      setCurrentSelectedItem = _useState2[1];\n\n  var _onPress = function _onPress(idx) {\n    onPress(idx);\n    setCurrentSelectedItem(idx);\n  };\n\n  var _renderRadioButtons = function _renderRadioButtons() {\n    return (values || []).map(function (listItem, idx) {\n      var isChecked = currentSelectedItem === idx ? true : false;\n      return React.createElement(RadioButton, {\n        key: idx,\n        onRadioButtonPress: function onRadioButtonPress() {\n          return _onPress(idx);\n        },\n        isChecked: isChecked,\n        text: listItem.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      });\n    });\n  };\n\n  return _renderRadioButtons();\n}","map":{"version":3,"sources":["/Users/user/Desktop/ChouChou/App/components/etc/RadioButton/RadioButtonContainer.js"],"names":["React","useState","useEffect","RadioButton","RadioButtonContainer","values","onPress","init","currentSelectedItem","setCurrentSelectedItem","_onPress","idx","_renderRadioButtons","map","listItem","isChecked","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,oBAAT,OAAyD;AAAA;;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACdN,QAAQ,CAACM,IAAD,CADM;AAAA;AAAA,MAC7DC,mBAD6D;AAAA,MACxCC,sBADwC;;AAGpE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACtBL,IAAAA,OAAO,CAACK,GAAD,CAAP;AACAF,IAAAA,sBAAsB,CAACE,GAAD,CAAtB;AACH,GAHD;;AAKA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,WAAO,CAACP,MAAM,IAAI,EAAX,EAAeQ,GAAf,CAAmB,UAACC,QAAD,EAAWH,GAAX,EAAmB;AACzC,UAAII,SAAS,GAAGP,mBAAmB,KAAKG,GAAxB,GAA8B,IAA9B,GAAqC,KAArD;AACA,aACI,oBAAC,WAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,kBAAkB,EAAE;AAAA,iBAAMD,QAAQ,CAACC,GAAD,CAAd;AAAA,SAFxB;AAGI,QAAA,SAAS,EAAEI,SAHf;AAII,QAAA,IAAI,EAAED,QAAQ,CAACE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH,KAVM,CAAP;AAWH,GAZD;;AAaA,SAAOJ,mBAAmB,EAA1B;AACH","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RadioButton from \"./RadioButton\";\n\nexport default function RadioButtonContainer({ values, onPress, init }) {\n    const [currentSelectedItem, setCurrentSelectedItem] = useState(init);\n\n    const _onPress = (idx) => {\n        onPress(idx);\n        setCurrentSelectedItem(idx);\n    };\n\n    const _renderRadioButtons = () => {\n        return (values || []).map((listItem, idx) => {\n            let isChecked = currentSelectedItem === idx ? true : false;\n            return (\n                <RadioButton\n                    key={idx}\n                    onRadioButtonPress={() => _onPress(idx)}\n                    isChecked={isChecked}\n                    text={listItem.text}\n                />\n            );\n        });\n    };\n    return _renderRadioButtons();\n}"]},"metadata":{},"sourceType":"module"}