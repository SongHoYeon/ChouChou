{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/Desktop/ChouChou/App/pages/CalendarScreen.js\";\n\nimport React, { useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DateTime from 'react-native-customize-selected-date';\nimport DefaultModalPopup from \"../components/etc/ModalPopup\";\nimport _ from 'lodash';\nimport { useRef } from 'react/cjs/react.development';\nimport holidayKR from \"holiday-kr\";\n\nvar CalendarScreen = function CalendarScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultModalPopupVisible = _useState2[0],\n      setDefaultModalPopupVisible = _useState2[1];\n\n  var defaultPopupMessage = useRef(\"\");\n  var time = '';\n\n  var onChangeDate = function onChangeDate(date) {\n    var year = date.split('-')[0];\n    var month = date.split('-')[1];\n    var day = date.split('-')[2];\n    var lunarDate = holidayKR.getLunar(year, month, day);\n    setDefaultModalPopupVisible(true);\n    defaultPopupMessage.current = \"(양력)\" + year + \" - \" + month + \" - \" + day + \"\\n\" + \"(음력)\" + lunarDate.year + \" - \" + lunarDate.month + \" - \" + lunarDate.day + \"\\n\";\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(DateTime, {\n    date: time,\n    changeDate: function changeDate(date) {\n      return onChangeDate(date);\n    },\n    format: \"YYYY-MM-DD\",\n    renderChildDay: function renderChildDay(day) {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), React.createElement(DefaultModalPopup, {\n    text: defaultPopupMessage.current,\n    isVisible: defaultModalPopupVisible,\n    onPressConfirm: function onPressConfirm() {\n      setDefaultModalPopupVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CalendarScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  icLockRed: {\n    width: 13 / 2,\n    height: 9,\n    position: 'absolute',\n    top: 2,\n    left: 1\n  }\n});","map":{"version":3,"sources":["/Users/user/Desktop/ChouChou/App/pages/CalendarScreen.js"],"names":["React","useState","DateTime","DefaultModalPopup","_","useRef","holidayKR","CalendarScreen","defaultModalPopupVisible","setDefaultModalPopupVisible","defaultPopupMessage","time","onChangeDate","date","year","split","month","day","lunarDate","getLunar","current","styles","container","StyleSheet","create","flex","backgroundColor","icLockRed","width","height","position","top","left"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,iBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACuCN,QAAQ,CAAC,KAAD,CAD/C;AAAA;AAAA,MAClBO,wBADkB;AAAA,MACQC,2BADR;;AAEzB,MAAMC,mBAAmB,GAAGL,MAAM,CAAC,EAAD,CAAlC;AACA,MAAMM,IAAI,GAAG,EAAb;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3B,QAAMC,IAAI,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAb;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAd;AACA,QAAME,GAAG,GAAGJ,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAZ;AACA,QAAMG,SAAS,GAAGZ,SAAS,CAACa,QAAV,CAAmBL,IAAnB,EAAyBE,KAAzB,EAAgCC,GAAhC,CAAlB;AACAR,IAAAA,2BAA2B,CAAC,IAAD,CAA3B;AACAC,IAAAA,mBAAmB,CAACU,OAApB,GACA,SAASN,IAAT,GAAgB,KAAhB,GAAwBE,KAAxB,GAAgC,KAAhC,GAAwCC,GAAxC,GAA8C,IAA9C,GACE,MADF,GACWC,SAAS,CAACJ,IADrB,GAC4B,KAD5B,GACoCI,SAAS,CAACF,KAD9C,GACsD,KADtD,GAC8DE,SAAS,CAACD,GADxE,GAC8E,IAF9E;AAGH,GATD;;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEX,IADV;AAEI,IAAA,UAAU,EAAE,oBAACE,IAAD;AAAA,aAAUD,YAAY,CAACC,IAAD,CAAtB;AAAA,KAFhB;AAGI,IAAA,MAAM,EAAC,YAHX;AAII,IAAA,cAAc,EAAE,wBAACI,GAAD,EAAS,CAAG,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEP,mBAAmB,CAACU,OAA7C;AAAsD,IAAA,SAAS,EAAEZ,wBAAjE;AAA2F,IAAA,cAAc,EAAE,0BAAM;AAAEC,MAAAA,2BAA2B,CAAC,KAAD,CAA3B;AAAqC,KAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAYH,CA3BD;;AA6BA,eAAeF,cAAf;AACA,IAAMc,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE,KAAK,CADL;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,QAAQ,EAAE,UAHH;AAIPC,IAAAA,GAAG,EAAE,CAJE;AAKPC,IAAAA,IAAI,EAAE;AALC;AALkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Platform, StyleSheet, Text, View, Image } from 'react-native';\nimport DateTime from 'react-native-customize-selected-date'\nimport DefaultModalPopup from '../components/etc/ModalPopup';\nimport _ from 'lodash'\nimport { useRef } from 'react/cjs/react.development';\nimport holidayKR from \"holiday-kr\";\n\nconst CalendarScreen = () => {\n    const [defaultModalPopupVisible, setDefaultModalPopupVisible] = useState(false);\n    const defaultPopupMessage = useRef(\"\");\n    const time = '';\n    const onChangeDate = (date) => {\n        const year = date.split('-')[0]\n        const month = date.split('-')[1]\n        const day = date.split('-')[2]\n        const lunarDate = holidayKR.getLunar(year, month, day);\n        setDefaultModalPopupVisible(true)\n        defaultPopupMessage.current = \n        \"(양력)\" + year + \" - \" + month + \" - \" + day + \"\\n\"\n        + \"(음력)\" + lunarDate.year + \" - \" + lunarDate.month + \" - \" + lunarDate.day + \"\\n\";\n    }\n\n    return (\n        <View style={styles.container}>\n            <DateTime\n                date={time}\n                changeDate={(date) => onChangeDate(date)}\n                format='YYYY-MM-DD'\n                renderChildDay={(day) => { }}\n            />\n            <DefaultModalPopup text={defaultPopupMessage.current} isVisible={defaultModalPopupVisible} onPressConfirm={() => { setDefaultModalPopupVisible(false); }} />\n        </View>\n    );\n\n}\n\nexport default CalendarScreen;\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'grey',\n    },\n    icLockRed: {\n        width: 13 / 2,\n        height: 9,\n        position: 'absolute',\n        top: 2,\n        left: 1\n    }\n});\n"]},"metadata":{},"sourceType":"module"}